version: "3.9"

services:
  nginx:
    container_name: infisical-dev-nginx
    image: nginx
    restart: always
    ports:
      - 8082:80
    volumes:
      - ./nginx/default.dev.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend

  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: infisical
      POSTGRES_USER: infisical
      POSTGRES_DB: infisical

  redis:
    image: redis
    container_name: infisical-dev-redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

  db-migration:
    container_name: infisical-db-migration
    depends_on:
      - db
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    env_file: .env
    environment:
      - DB_CONNECTION_URI=postgres://infisical:infisical@db/infisical?sslmode=disable
    command: npm run migration:latest
    volumes:
      - ./backend/src:/app/src

  backend:
    container_name: infisical-dev-api
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
      db-migration:
        condition: service_completed_successfully
    env_file:
      - .env
    ports:
      - 4000:4000
    environment:
      - NODE_ENV=development
      - DB_CONNECTION_URI=postgres://infisical:infisical@db/infisical?sslmode=disable
      - TELEMETRY_ENABLED=false
    volumes:
      - ./backend/src:/app/src

  frontend:
    container_name: infisical-dev-frontend
    restart: unless-stopped
    depends_on:
      - backend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend/src:/app/src/ # mounted whole src to avoid missing reload on new files
      - ./frontend/public:/app/public
    env_file: .env
    environment:
      - NEXT_PUBLIC_ENV=development
      - INFISICAL_TELEMETRY_ENABLED=false

volumes:
  postgres-data:
    driver: local
  redis_data:
    driver: local
